// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Session {
  id            String         @id
  shop          String
  state         String
  isOnline      Boolean        @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean        @default(false)
  locale        String?
  collaborator  Boolean?       @default(false)
  emailVerified Boolean?       @default(false)
  Configuration Configuration?
}

model Configuration {
  id          Int     @id @default(autoincrement())
  session     Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId   String  @unique
  shop        String  @unique
  accountName String?
  ready       Boolean @default(true)
  apiVersion  String  @default("unstable")
  merchantKey String
  merchantPassword String
  testMode Boolean @default(true)
  @@index([sessionId])
}

model PaymentSession {
  id            String           @id
  gid           String
  group         String
  amount        Decimal
  test          Boolean
  currency      String
  kind          String
  shop          String
  paymentMethod String
  customer      String @db.Text
  cancelUrl     String?
  refunds       RefundSession[]
  captures      CaptureSession[]
  void          VoidSession?
  proposedAt    DateTime
  status        String?
}

model RefundSession {
  id         String         @id
  gid        String
  payment    PaymentSession @relation(fields: [paymentId], references: [id])
  paymentId  String
  amount     Decimal
  currency   String
  proposedAt DateTime
  status     String?
}

model CaptureSession {
  id         String         @id
  gid        String
  payment    PaymentSession @relation(fields: [paymentId], references: [id])
  paymentId  String
  amount     Decimal
  currency   String
  proposedAt DateTime
  status     String?
}

model VoidSession {
  id         String         @id
  gid        String
  payment    PaymentSession @relation(fields: [paymentId], references: [id])
  paymentId  String         @unique
  proposedAt DateTime
  status     String?
}
